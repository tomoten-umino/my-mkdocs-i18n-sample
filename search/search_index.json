{"config":{"indexing":"full","lang":["en","ja"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction This is the demo page for the mkdocs plugin \"static-i18n\".","title":"Introduction"},{"location":"#introduction","text":"This is the demo page for the mkdocs plugin \"static-i18n\".","title":"Introduction"},{"location":"topic1/","text":"Table of Contents Portable Gluster","title":"Table of Contents"},{"location":"topic1/#table-of-contents","text":"Portable Gluster","title":"Table of Contents"},{"location":"topic1/page1/","text":"Portable Gluster This repository contains the tool to create the docker image of Glusterfs container with 2 replicas. Table of contents Dependancy Usage Directory-Structure Setting Building Deployment License Dependency This tool uses the following software. docker and docker-compose bash envsubst Usage Directory-Structure Setting This tool can change the following parameter names by defining them in the setup/.env file. NETWORK_ADDR : Network address of the production environment. HOSTNAME_1 : Gluster-container-1's name IP_ADDR_1 : Gluster-container-1's address HOSTNAME_2 : Gluster-container-2's name IP_ADDR_2 : Gluster-container-2's address VOLUME_NAME : Gluster volume name Building After moving to the setup directory, run build.sh as follows. You can check the Usage by running the -h(or --help) option to build.sh AAAAA:BBBBB is docker image name and tag. After executing build.sh, the docker image (portable-gluster.tar) and docker-compose.yml for deployment will be generated in the deploy directory. $ cd [setup directory] $ ./build.sh -t AAAAAA:BBBBBB Deployment Transfer what is under the deploy directory to any directory in the production environment. After moving to the setup directory, load the docker image in the deploy directory. Run as a user who can use the docker command. After loading docker iamge, Start the docker container as follows. Run on two servers at the same time. Glusterfs logs are output to the log directory. $ cd [deploy directory] $ docker image load -i portable-gluster.tar -- in the server 1 ---------------------------------- $ docker-compose up -d gluster-server-1 -- in the server 2 ---------------------------------- $ docker-compose up -d gluster-server-2 Remarks The Gluster container moves the Glusterfs configuration directory in the container to the specified location at startup as the following figure. License This tool is released under the WTFPL, see LICENSE.","title":"Portable Gluster"},{"location":"topic1/page1/#portable-gluster","text":"This repository contains the tool to create the docker image of Glusterfs container with 2 replicas.","title":"Portable Gluster"},{"location":"topic1/page1/#table-of-contents","text":"Dependancy Usage Directory-Structure Setting Building Deployment License","title":"Table of contents"},{"location":"topic1/page1/#dependency","text":"This tool uses the following software. docker and docker-compose bash envsubst","title":"Dependency"},{"location":"topic1/page1/#usage","text":"","title":"Usage"},{"location":"topic1/page1/#directory-structure","text":"","title":"Directory-Structure"},{"location":"topic1/page1/#setting","text":"This tool can change the following parameter names by defining them in the setup/.env file. NETWORK_ADDR : Network address of the production environment. HOSTNAME_1 : Gluster-container-1's name IP_ADDR_1 : Gluster-container-1's address HOSTNAME_2 : Gluster-container-2's name IP_ADDR_2 : Gluster-container-2's address VOLUME_NAME : Gluster volume name","title":"Setting"},{"location":"topic1/page1/#building","text":"After moving to the setup directory, run build.sh as follows. You can check the Usage by running the -h(or --help) option to build.sh AAAAA:BBBBB is docker image name and tag. After executing build.sh, the docker image (portable-gluster.tar) and docker-compose.yml for deployment will be generated in the deploy directory. $ cd [setup directory] $ ./build.sh -t AAAAAA:BBBBBB","title":"Building"},{"location":"topic1/page1/#deployment","text":"Transfer what is under the deploy directory to any directory in the production environment. After moving to the setup directory, load the docker image in the deploy directory. Run as a user who can use the docker command. After loading docker iamge, Start the docker container as follows. Run on two servers at the same time. Glusterfs logs are output to the log directory. $ cd [deploy directory] $ docker image load -i portable-gluster.tar -- in the server 1 ---------------------------------- $ docker-compose up -d gluster-server-1 -- in the server 2 ---------------------------------- $ docker-compose up -d gluster-server-2","title":"Deployment"},{"location":"topic1/page1/#remarks","text":"The Gluster container moves the Glusterfs configuration directory in the container to the specified location at startup as the following figure.","title":"Remarks"},{"location":"topic1/page1/#license","text":"This tool is released under the WTFPL, see LICENSE.","title":"License"},{"location":"ja/","text":"\u306f\u3058\u3081\u306b \u672c\u66f8\u306fmkdocs\u30d7\u30e9\u30b0\u30a4\u30f3\"static-i18n\"\u306e\u30c7\u30e2\u30da\u30fc\u30b8\u3067\u3059\u3002","title":"\u306f\u3058\u3081\u306b"},{"location":"ja/#_1","text":"\u672c\u66f8\u306fmkdocs\u30d7\u30e9\u30b0\u30a4\u30f3\"static-i18n\"\u306e\u30c7\u30e2\u30da\u30fc\u30b8\u3067\u3059\u3002","title":"\u306f\u3058\u3081\u306b"},{"location":"ja/topic1/","text":"\u76ee\u6b21 \u30dd\u30fc\u30bf\u30d6\u30ebGluster","title":"\u76ee\u6b21"},{"location":"ja/topic1/#_1","text":"\u30dd\u30fc\u30bf\u30d6\u30ebGluster","title":"\u76ee\u6b21"},{"location":"ja/topic1/page1/","text":"\u30dd\u30fc\u30bf\u30d6\u30ebGluster This repository contains the tool to create the docker image of Glusterfs container with 2 replicas. Table of contents Dependancy Usage Directory-Structure Setting Building Deployment License Dependency This tool uses the following software. docker and docker-compose bash envsubst Usage Directory-Structure Setting This tool can change the following parameter names by defining them in the setup/.env file. NETWORK_ADDR : Network address of the production environment. HOSTNAME_1 : Gluster-container-1's name IP_ADDR_1 : Gluster-container-1's address HOSTNAME_2 : Gluster-container-2's name IP_ADDR_2 : Gluster-container-2's address VOLUME_NAME : Gluster volume name Building After moving to the setup directory, run build.sh as follows. You can check the Usage by running the -h(or --help) option to build.sh AAAAA:BBBBB is docker image name and tag. After executing build.sh, the docker image (portable-gluster.tar) and docker-compose.yml for deployment will be generated in the deploy directory. $ cd [setup directory] $ ./build.sh -t AAAAAA:BBBBBB Deployment Transfer what is under the deploy directory to any directory in the production environment. After moving to the setup directory, load the docker image in the deploy directory. Run as a user who can use the docker command. After loading docker iamge, Start the docker container as follows. Run on two servers at the same time. Glusterfs logs are output to the log directory. $ cd [deploy directory] $ docker image load -i portable-gluster.tar -- in the server 1 ---------------------------------- $ docker-compose up -d gluster-server-1 -- in the server 2 ---------------------------------- $ docker-compose up -d gluster-server-2 Remarks The Gluster container moves the Glusterfs configuration directory in the container to the specified location at startup as the following figure. License This tool is released under the WTFPL, see LICENSE.","title":"\u30dd\u30fc\u30bf\u30d6\u30ebGluster"},{"location":"ja/topic1/page1/#gluster","text":"This repository contains the tool to create the docker image of Glusterfs container with 2 replicas.","title":"\u30dd\u30fc\u30bf\u30d6\u30ebGluster"},{"location":"ja/topic1/page1/#table-of-contents","text":"Dependancy Usage Directory-Structure Setting Building Deployment License","title":"Table of contents"},{"location":"ja/topic1/page1/#dependency","text":"This tool uses the following software. docker and docker-compose bash envsubst","title":"Dependency"},{"location":"ja/topic1/page1/#usage","text":"","title":"Usage"},{"location":"ja/topic1/page1/#directory-structure","text":"","title":"Directory-Structure"},{"location":"ja/topic1/page1/#setting","text":"This tool can change the following parameter names by defining them in the setup/.env file. NETWORK_ADDR : Network address of the production environment. HOSTNAME_1 : Gluster-container-1's name IP_ADDR_1 : Gluster-container-1's address HOSTNAME_2 : Gluster-container-2's name IP_ADDR_2 : Gluster-container-2's address VOLUME_NAME : Gluster volume name","title":"Setting"},{"location":"ja/topic1/page1/#building","text":"After moving to the setup directory, run build.sh as follows. You can check the Usage by running the -h(or --help) option to build.sh AAAAA:BBBBB is docker image name and tag. After executing build.sh, the docker image (portable-gluster.tar) and docker-compose.yml for deployment will be generated in the deploy directory. $ cd [setup directory] $ ./build.sh -t AAAAAA:BBBBBB","title":"Building"},{"location":"ja/topic1/page1/#deployment","text":"Transfer what is under the deploy directory to any directory in the production environment. After moving to the setup directory, load the docker image in the deploy directory. Run as a user who can use the docker command. After loading docker iamge, Start the docker container as follows. Run on two servers at the same time. Glusterfs logs are output to the log directory. $ cd [deploy directory] $ docker image load -i portable-gluster.tar -- in the server 1 ---------------------------------- $ docker-compose up -d gluster-server-1 -- in the server 2 ---------------------------------- $ docker-compose up -d gluster-server-2","title":"Deployment"},{"location":"ja/topic1/page1/#remarks","text":"The Gluster container moves the Glusterfs configuration directory in the container to the specified location at startup as the following figure.","title":"Remarks"},{"location":"ja/topic1/page1/#license","text":"This tool is released under the WTFPL, see LICENSE.","title":"License"}]}